// <auto-generated />
using System;
using GYMDB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GYMDB.Migrations
{
    [DbContext(typeof(ContextDB))]
    [Migration("20220303081348_addNewModels")]
    partial class addNewModels
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GYMDB.Models.Client", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrainerID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("TrainerID");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("GYMDB.Models.ClientRoutine", b =>
                {
                    b.Property<int>("ClientRoutineID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientRoutineID"), 1L, 1);

                    b.Property<int>("ClientID")
                        .HasColumnType("int");

                    b.Property<DateTime>("RoutineDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoutineID")
                        .HasColumnType("int");

                    b.HasKey("ClientRoutineID");

                    b.HasIndex("ClientID");

                    b.ToTable("ClientRoutines");
                });

            modelBuilder.Entity("GYMDB.Models.Exercise", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("GYMDB.Models.Measurement", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("Chest")
                        .HasColumnType("int");

                    b.Property<int>("ClientID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfCreation")
                        .HasColumnType("datetime2");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("LeftArm")
                        .HasColumnType("int");

                    b.Property<int>("LeftLeg")
                        .HasColumnType("int");

                    b.Property<int>("RightArm")
                        .HasColumnType("int");

                    b.Property<int>("RightLeg")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ClientID");

                    b.ToTable("Measurements");
                });

            modelBuilder.Entity("GYMDB.Models.Review", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("DateOfCreation")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReviewCreatorID")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrainerID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ReviewCreatorID");

                    b.HasIndex("TrainerID");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("GYMDB.Models.Routine", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Routines");
                });

            modelBuilder.Entity("GYMDB.Models.RoutineExercise", b =>
                {
                    b.Property<int>("RoutineExerciseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoutineExerciseID"), 1L, 1);

                    b.Property<int?>("ClientRoutineID")
                        .HasColumnType("int");

                    b.Property<int>("ExerciseID")
                        .HasColumnType("int");

                    b.Property<int>("RoutineID")
                        .HasColumnType("int");

                    b.HasKey("RoutineExerciseID");

                    b.HasIndex("ClientRoutineID");

                    b.HasIndex("ExerciseID");

                    b.HasIndex("RoutineID");

                    b.ToTable("RoutineExercises");
                });

            modelBuilder.Entity("GYMDB.Models.Trainer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Trainers");
                });

            modelBuilder.Entity("GYMDB.Models.Client", b =>
                {
                    b.HasOne("GYMDB.Models.Trainer", "Trainer")
                        .WithMany()
                        .HasForeignKey("TrainerID");

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("GYMDB.Models.ClientRoutine", b =>
                {
                    b.HasOne("GYMDB.Models.Client", null)
                        .WithMany("ClientRoutines")
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GYMDB.Models.Measurement", b =>
                {
                    b.HasOne("GYMDB.Models.Client", null)
                        .WithMany("Measurement")
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GYMDB.Models.Review", b =>
                {
                    b.HasOne("GYMDB.Models.Client", "ReviewCreator")
                        .WithMany()
                        .HasForeignKey("ReviewCreatorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GYMDB.Models.Trainer", "Trainer")
                        .WithMany("Reviews")
                        .HasForeignKey("TrainerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReviewCreator");

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("GYMDB.Models.RoutineExercise", b =>
                {
                    b.HasOne("GYMDB.Models.ClientRoutine", null)
                        .WithMany("Exercises")
                        .HasForeignKey("ClientRoutineID");

                    b.HasOne("GYMDB.Models.Exercise", "Exercise")
                        .WithMany()
                        .HasForeignKey("ExerciseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GYMDB.Models.Routine", null)
                        .WithMany("RoutineExercises")
                        .HasForeignKey("RoutineID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");
                });

            modelBuilder.Entity("GYMDB.Models.Client", b =>
                {
                    b.Navigation("ClientRoutines");

                    b.Navigation("Measurement");
                });

            modelBuilder.Entity("GYMDB.Models.ClientRoutine", b =>
                {
                    b.Navigation("Exercises");
                });

            modelBuilder.Entity("GYMDB.Models.Routine", b =>
                {
                    b.Navigation("RoutineExercises");
                });

            modelBuilder.Entity("GYMDB.Models.Trainer", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
